"""
Load a large number of simulations done with
a given CAN architecture and random initial conditions. 

Collate the state space activity of each simulation
and run TDA and visualization. 

The data were generated by: scripts/outline/single_can_simulate_init_conditions.jl
"""


using Plots
using GeneralAttractors
using GeneralAttractors.ProjectSupervisor
using GeneralAttractors.Analysis 

params = AnalysisParameters(
    max_nPC = 50,
    n_isomap_dimensions = 3,
    isomap_k = 10,
    isomap_downsample = 50,
)


LOAD_DATA = false
RUN_PCA = true
RUN_ISOMAP = true


# --------------------------------- load data -------------------------------- #

supervisor = Supervisor("GeneralAttractorsTheory")
set_datadir(supervisor, "/Users/federicoclaudi/Dropbox (Personal)/Postdoc/GeneralAttractors/data")

# get metadata and data for entries for a given simulation (if not loaded already)
LOAD_DATA && begin
    metadata, data = ProjectSupervisor.fetch(supervisor; 
        tag = "random_initial_conditions",
        can = "torus"
    )

    # stack activations over time
    X = hcat(
        map(
            d -> d["S"][:, 1, 10:end], data
        )...
    )

    # get the location of the peak of the activation
    x, y = [], []
    for i in 1:size(X, 2)
        I = argmax(reshape(X[:, i], (64, 64))) 
        push!(x, I[1])
        push!(y, I[2])
    end

    plt = scatter(x, y, markersize = 1.0, 
            legend = false, 
            alpha=.5,
            title = "Peak of activation", 
            xlabel = "x", ylabel = "y", size = (500, 500))
    display(plt)
end



# ------------------------- dimensionality reduction ------------------------- #
RUN_PCA && begin
    pca, X_reduced = Analysis.pca_dimensionality_reduction(X, params)
end


RUN_ISOMAP && @isdefined(X_reduced) && begin
    iso, M = isomap_dimensionality_reduction(X_reduced, params)
end

@isdefined(M) && begin
    scatter3d(
        M[1, :], M[2, :], M[3, :],
        markersize = 0.5,
        legend = false,
        title = "Isomap",
        xlabel = "M1", ylabel = "M2", zlabel = "M3",
        camera = (30, 60),
        size = (800, 800),
    )
end